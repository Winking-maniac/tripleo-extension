heat_template_version: rocky

description: >
  External Swift Proxy endpoint configured with Puppet

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ExternalSwiftUserTenant:
    description: Tenant where swift user will be set as admin
    type: string
    default: 'service'
  SwiftPassword:
    description: The password for the swift service account
    type: string
    hidden: true
  KeystoneRegion:
    type: string
    default: 'regionOne'
    description: Keystone region for endpoint
  ExternalSwiftProxyNodeIps:
    default: []
    type: comma_delimited_list
  ExternalSwiftProxyNodeNames:
    default: []
    type: comma_delimited_list

resources:

conditions:
  deprecated_external_admin_url: {not: {equals: [{get_param: ExternalAdminUrl}, 'deprecated']}}
  deprecated_external_internal_url: {not: {equals: [{get_param: ExternalInternalUrl}, 'deprecated']}}
  deprecated_external_public_url: {not: {equals: [{get_param: ExternalPublicUrl}, 'deprecated']}}

outputs:
  role_data:
    description: Role data for External Swift proxy.
    value:
      service_name: external_swift_proxy
      config_settings:
        swift_proxy_enabled: true
        swift_proxy_network: 'storage'
        swift::proxy::port: 8080
        swift_proxy_node_ips: {get_param: ExternalSwiftProxyNodeIps}
        swift_proxy_node_names: {get_param: ExternalSwiftProxyNodeNames}

      step_config:

      keystone_resources:
        swift:
          endpoints:
            public: {get_param: [EndpointMap, SwiftProxyServerPublic, uri]}
            internal: {get_param: [EndpointMap, SwiftProxyServerInternal, uri]}
            admin: {get_param: [EndpointMap, SwiftProxyServerAdmin, uri]}
          users:
            swift:
              password: {get_param: SwiftPassword}
          region: {get_param: KeystoneRegion}
          service: 'object-store'
          roles:
            - swiftoperator
            - ResellerAdmin
